using System;
using System.Collections.Generic;

namespace HexConverter
{
    public static class HexConverter
    {
        public static readonly List<char> HexChars = new List<char>
        {
            '0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'
        };

        public static readonly Dictionary<byte, string> ByteToHex = new Dictionary<byte, string>
        {
            {0  ,"00"},{16 ,"10"},{32 ,"20"},{48 ,"30"},{64 ,"40"},{80 ,"50"},{96 ,"60"},{112,"70"},
            {1  ,"01"},{17 ,"11"},{33 ,"21"},{49 ,"31"},{65 ,"41"},{81 ,"51"},{97 ,"61"},{113,"71"},
            {2  ,"02"},{18 ,"12"},{34 ,"22"},{50 ,"32"},{66 ,"42"},{82 ,"52"},{98 ,"62"},{114,"72"},
            {3  ,"03"},{19 ,"13"},{35 ,"23"},{51 ,"33"},{67 ,"43"},{83 ,"53"},{99 ,"63"},{115,"73"},
            {4  ,"04"},{20 ,"14"},{36 ,"24"},{52 ,"34"},{68 ,"44"},{84 ,"54"},{100,"64"},{116,"74"},
            {5  ,"05"},{21 ,"15"},{37 ,"25"},{53 ,"35"},{69 ,"45"},{85 ,"55"},{101,"65"},{117,"75"},
            {6  ,"06"},{22 ,"16"},{38 ,"26"},{54 ,"36"},{70 ,"46"},{86 ,"56"},{102,"66"},{118,"76"},
            {7  ,"07"},{23 ,"17"},{39 ,"27"},{55 ,"37"},{71 ,"47"},{87 ,"57"},{103,"67"},{119,"77"},
            {8  ,"08"},{24 ,"18"},{40 ,"28"},{56 ,"38"},{72 ,"48"},{88 ,"58"},{104,"68"},{120,"78"},
            {9  ,"09"},{25 ,"19"},{41 ,"29"},{57 ,"39"},{73 ,"49"},{89 ,"59"},{105,"69"},{121,"79"},
            {10 ,"0A"},{26 ,"1A"},{42 ,"2A"},{58 ,"3A"},{74 ,"4A"},{90 ,"5A"},{106,"6A"},{122,"7A"},
            {11 ,"0B"},{27 ,"1B"},{43 ,"2B"},{59 ,"3B"},{75 ,"4B"},{91 ,"5B"},{107,"6B"},{123,"7B"},
            {12 ,"0C"},{28 ,"1C"},{44 ,"2C"},{60 ,"3C"},{76 ,"4C"},{92 ,"5C"},{108,"6C"},{124,"7C"},
            {13 ,"0D"},{29 ,"1D"},{45 ,"2D"},{61 ,"3D"},{77 ,"4D"},{93 ,"5D"},{109,"6D"},{125,"7D"},
            {14 ,"0E"},{30 ,"1E"},{46 ,"2E"},{62 ,"3E"},{78 ,"4E"},{94 ,"5E"},{110,"6E"},{126,"7E"},
            {15 ,"0F"},{31 ,"1F"},{47 ,"2F"},{63 ,"3F"},{79 ,"4F"},{95 ,"5F"},{111,"6F"},{127,"7F"},
                                           
            {128,"80"},{144,"90"},{160,"A0"},{176,"B0"},{192,"C0"},{208,"D0"},{224,"E0"},{240,"F0"},
            {129,"81"},{145,"91"},{161,"A1"},{177,"B1"},{193,"C1"},{209,"D1"},{225,"E1"},{241,"F1"},
            {130,"82"},{146,"92"},{162,"A2"},{178,"B2"},{194,"C2"},{210,"D2"},{226,"E2"},{242,"F2"},
            {131,"83"},{147,"93"},{163,"A3"},{179,"B3"},{195,"C3"},{211,"D3"},{227,"E3"},{243,"F3"},
            {132,"84"},{148,"94"},{164,"A4"},{180,"B4"},{196,"C4"},{212,"D4"},{228,"E4"},{244,"F4"},
            {133,"85"},{149,"95"},{165,"A5"},{181,"B5"},{197,"C5"},{213,"D5"},{229,"E5"},{245,"F5"},
            {134,"86"},{150,"96"},{166,"A6"},{182,"B6"},{198,"C6"},{214,"D6"},{230,"E6"},{246,"F6"},
            {135,"87"},{151,"97"},{167,"A7"},{183,"B7"},{199,"C7"},{215,"D7"},{231,"E7"},{247,"F7"},
            {136,"88"},{152,"98"},{168,"A8"},{184,"B8"},{200,"C8"},{216,"D8"},{232,"E8"},{248,"F8"},
            {137,"89"},{153,"99"},{169,"A9"},{185,"B9"},{201,"C9"},{217,"D9"},{233,"E9"},{249,"F9"},
            {138,"8A"},{154,"9A"},{170,"AA"},{186,"BA"},{202,"CA"},{218,"DA"},{234,"EA"},{250,"FA"},
            {139,"8B"},{155,"9B"},{171,"AB"},{187,"BB"},{203,"CB"},{219,"DB"},{235,"EB"},{251,"FB"},
            {140,"8C"},{156,"9C"},{172,"AC"},{188,"BC"},{204,"CC"},{220,"DC"},{236,"EC"},{252,"FC"},
            {141,"8D"},{157,"9D"},{173,"AD"},{189,"BD"},{205,"CD"},{221,"DD"},{237,"ED"},{253,"FD"},
            {142,"8E"},{158,"9E"},{174,"AE"},{190,"BE"},{206,"CE"},{222,"DE"},{238,"EE"},{254,"FE"},
            {143,"8F"},{159,"9F"},{175,"AF"},{191,"BF"},{207,"CF"},{223,"DF"},{239,"EF"},{255,"FF"},
        };

        public static readonly Dictionary<string, byte> HexToByte = new Dictionary<string, byte>
        {
            {"00",0  },{"10",16 },{"20",32 },{"30",48 },{"40",64 },{"50",80 },{"60",96 },{"70",112},
            {"01",1  },{"11",17 },{"21",33 },{"31",49 },{"41",65 },{"51",81 },{"61",97 },{"71",113},
            {"02",2  },{"12",18 },{"22",34 },{"32",50 },{"42",66 },{"52",82 },{"62",98 },{"72",114},
            {"03",3  },{"13",19 },{"23",35 },{"33",51 },{"43",67 },{"53",83 },{"63",99 },{"73",115},
            {"04",4  },{"14",20 },{"24",36 },{"34",52 },{"44",68 },{"54",84 },{"64",100},{"74",116},
            {"05",5  },{"15",21 },{"25",37 },{"35",53 },{"45",69 },{"55",85 },{"65",101},{"75",117},
            {"06",6  },{"16",22 },{"26",38 },{"36",54 },{"46",70 },{"56",86 },{"66",102},{"76",118},
            {"07",7  },{"17",23 },{"27",39 },{"37",55 },{"47",71 },{"57",87 },{"67",103},{"77",119},
            {"08",8  },{"18",24 },{"28",40 },{"38",56 },{"48",72 },{"58",88 },{"68",104},{"78",120},
            {"09",9  },{"19",25 },{"29",41 },{"39",57 },{"49",73 },{"59",89 },{"69",105},{"79",121},
            {"0A",10 },{"1A",26 },{"2A",42 },{"3A",58 },{"4A",74 },{"5A",90 },{"6A",106},{"7A",122},
            {"0B",11 },{"1B",27 },{"2B",43 },{"3B",59 },{"4B",75 },{"5B",91 },{"6B",107},{"7B",123},
            {"0C",12 },{"1C",28 },{"2C",44 },{"3C",60 },{"4C",76 },{"5C",92 },{"6C",108},{"7C",124},
            {"0D",13 },{"1D",29 },{"2D",45 },{"3D",61 },{"4D",77 },{"5D",93 },{"6D",109},{"7D",125},
            {"0E",14 },{"1E",30 },{"2E",46 },{"3E",62 },{"4E",78 },{"5E",94 },{"6E",110},{"7E",126},
            {"0F",15 },{"1F",31 },{"2F",47 },{"3F",63 },{"4F",79 },{"5F",95 },{"6F",111},{"7F",127},

            {"80",128},{"90",144},{"A0",160},{"B0",176},{"C0",192},{"D0",208},{"E0",224},{"F0",240},
            {"81",129},{"91",145},{"A1",161},{"B1",177},{"C1",193},{"D1",209},{"E1",225},{"F1",241},
            {"82",130},{"92",146},{"A2",162},{"B2",178},{"C2",194},{"D2",210},{"E2",226},{"F2",242},
            {"83",131},{"93",147},{"A3",163},{"B3",179},{"C3",195},{"D3",211},{"E3",227},{"F3",243},
            {"84",132},{"94",148},{"A4",164},{"B4",180},{"C4",196},{"D4",212},{"E4",228},{"F4",244},
            {"85",133},{"95",149},{"A5",165},{"B5",181},{"C5",197},{"D5",213},{"E5",229},{"F5",245},
            {"86",134},{"96",150},{"A6",166},{"B6",182},{"C6",198},{"D6",214},{"E6",230},{"F6",246},
            {"87",135},{"97",151},{"A7",167},{"B7",183},{"C7",199},{"D7",215},{"E7",231},{"F7",247},
            {"88",136},{"98",152},{"A8",168},{"B8",184},{"C8",200},{"D8",216},{"E8",232},{"F8",248},
            {"89",137},{"99",153},{"A9",169},{"B9",185},{"C9",201},{"D9",217},{"E9",233},{"F9",249},
            {"8A",138},{"9A",154},{"AA",170},{"BA",186},{"CA",202},{"DA",218},{"EA",234},{"FA",250},
            {"8B",139},{"9B",155},{"AB",171},{"BB",187},{"CB",203},{"DB",219},{"EB",235},{"FB",251},
            {"8C",140},{"9C",156},{"AC",172},{"BC",188},{"CC",204},{"DC",220},{"EC",236},{"FC",252},
            {"8D",141},{"9D",157},{"AD",173},{"BD",189},{"CD",205},{"DD",221},{"ED",237},{"FD",253},
            {"8E",142},{"9E",158},{"AE",174},{"BE",190},{"CE",206},{"DE",222},{"EE",238},{"FE",254},
            {"8F",143},{"9F",159},{"AF",175},{"BF",191},{"CF",207},{"DF",223},{"EF",239},{"FF",255},
        };

        /// <summary>
        /// Gets a hexadecimal string
        /// </summary>
        /// <param name="bytes"> raw bytes </param>
        /// <returns> Ex. "2A54FF00" </returns>
        public static string GetHex(byte[] bytes)
        {
            if(bytes == null)
            {
                throw new ArgumentNullException();
            }

            string[] hexArray = new string[bytes.Length];

            for(int i = 0; i < bytes.Length; i++)
            {
                hexArray[i] = ByteToHex[bytes[i]];
            }

            return string.Concat(hexArray);
        }

        /// <summary>
        /// Gets a hexadecimal string array
        /// </summary>
        /// <param name="bytes"> raw bytes </param>
        /// <returns> Ex. { "2A", "54", "FF", "00" } </returns>
        public static string[] GetHexArray(byte[] bytes)
        {
            if (bytes == null)
            {
                throw new ArgumentNullException();
            }

            string[] hexArray = new string[bytes.Length];

            for (int i = 0; i < bytes.Length; i++)
            {
                hexArray[i] = ByteToHex[bytes[i]];
            }

            return hexArray;
        }

        /// <summary>
        /// Gets a hexadecimal string list
        /// </summary>
        /// <param name="bytes"> raw bytes </param>
        /// <returns> Ex. { "2A", "54", "FF", "00" } </returns>
        public static List<string> GetHexList(byte[] bytes)
        {
            if (bytes == null)
            {
                throw new ArgumentNullException();
            }

            List<string> hexArray = new List<string>(bytes.Length);

            for (int i = 0; i < bytes.Length; i++)
            {
                hexArray.Add(ByteToHex[bytes[i]]);
            }

            return hexArray;
        }

        /// <summary>
        /// Gets raw bytes from hexadecimal string array
        /// </summary>
        /// <param name="hex"> hexadecimal string array </param>
        /// <returns></returns>
        public static byte[] GetBytes(string[] hex)
        {
            if(hex == null)
            {
                throw new ArgumentNullException();
            }

            byte[] byteArray = new byte[hex.Length];

            for (int i = 0; i < hex.Length; i++)
            {
                byteArray[i] = HexToByte[hex[i]];
            }

            return byteArray;
        }

        /// <summary>
        /// Gets raw bytes from hexadecimal string list
        /// </summary>
        /// <param name="hex"> hexadecimal string list </param>
        /// <returns></returns>
        public static byte[] GetBytes(List<string> hex)
        {
            if (hex == null)
            {
                throw new ArgumentNullException();
            }

            byte[] byteArray = new byte[hex.Count];

            for (int i = 0; i < hex.Count; i++)
            {
                byteArray[i] = HexToByte[hex[i]];
            }

            return byteArray;
        }

        /// <summary>
        /// Gets raw bytes from hexadecimal string
        /// </summary>
        /// <param name="hex"> hexadecimal string </param>
        /// <returns></returns>
        public static byte[] GetBytes(string hex)
        {
            if(hex == null)
            {
                throw new ArgumentNullException();
            }
            else if(hex.Length % 2 != 0)
            {
                throw new ArgumentException("Hex string length does not have a factor of 2");
            }

            string substring;
            byte[] byteArray = new byte[hex.Length / 2];

            for (int i = 0; i < byteArray.Length; i++)
            {
                substring = hex.Substring((i*2), 2);
                byteArray[i] = HexToByte[substring];
            }

            return byteArray;
        }
    }
}
